<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter SYSTEM "../dtd/dblite.dtd" [
<!ENTITY % Symbols SYSTEM "Symbols.ent">
%Symbols;
]>
<section id="FunctionList" xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>List of functions</title>
	<indexterm><primary>functions</primary></indexterm>
	<indexterm><primary>constants</primary></indexterm>
	<indexterm><primary>x-variable</primary></indexterm>
	<indexterm><primary>t-variable</primary></indexterm>
	<indexterm><primary>Euler's constant</primary></indexterm>
	<indexterm><primary>pi</primary></indexterm>
	<indexterm><primary>operators</primary></indexterm>
	<indexterm><primary>addition</primary></indexterm>
	<indexterm><primary>subtraction</primary></indexterm>
	<indexterm><primary>multiplication</primary></indexterm>
	<indexterm><primary>division</primary></indexterm>
	<indexterm><primary>negation</primary></indexterm>
	<indexterm><primary>exponentiation</primary></indexterm>
	<indexterm><primary>power</primary></indexterm>
	<indexterm><primary>and operator</primary></indexterm>
	<indexterm><primary>or operator</primary></indexterm>
	<indexterm><primary>xor operator</primary></indexterm>
	<indexterm><primary>not operator</primary></indexterm>

	<para>
		The following is a list of all variables, constants, operators and functions supported by the program.
		The list of operators shows the operators with the highest precedence first.
		The precedence of operators can be changed through the use of brackets.
		Both (), {} and [] may be used as brackets. Notice that the parser is case insensitive.
		There is no difference between upper and lower case characters.
		The only exception is <function>e</function> in Euler's constant and E in a <glossterm baseform="real number">number</glossterm>.
	</para>
	<para>
		<informaltable>
			<?dbhtml table-width="90%" ?>
			<tgroup cols="2">
				<colspec colnum="1" colwidth="0.25*"/>
				<colspec colnum="2" colwidth="0.75*"/>
				<thead>
					<row>
						<entry>Variable/constant</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>x</entry>
						<entry>The variable used in standard functions.</entry>
					</row>
					<row>
						<entry>t</entry>
						<entry>The variable used in parametric and polar functions.</entry>
					</row>
					<row>
						<entry>e</entry>
						<entry>Euler's constant. In this program defined as e=2.718281828459045235360287</entry>
					</row>
					<row>
						<entry>pi</entry>
 	   				<entry>The constant &pgr;, which in this program is defined as pi=3.141592653589793238462643</entry>
 	   			</row>
		 			<row>
 	   				<entry>undef</entry>
 	   				<entry>Always returns an error. Used to indicate that part of a function is undefined.</entry>
 	   			</row>
 	   			<row>
 	   				<entry>&imag;</entry>
 	   				<entry>The imaginary unit. Defined as &imag;<superscript>2</superscript> = -1. Only useful when working with complex numbers.</entry>
		 			</row>
 	   			<row>
 	   				<entry><link linkend="rand">rand</link></entry>
 	   				<entry>Evaluates to a random number between 0 and 1.</entry>
    			</row>
 				</tbody>
			</tgroup>
		</informaltable>
	</para>


	<para>
		<informaltable>
			<?dbhtml table-width="90%" ?>
			<tgroup cols="2">
				<colspec colnum="1" colwidth="0.25*"/>
				<colspec colnum="2" colwidth="0.75*"/>
				<thead>
					<row>
						<entry>Operator/constant</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>Exponentation (^)</entry>
						<entry>Raise to the power of an exponent. Example: f(x)=2^x</entry>
					</row>
					<row>
						<entry>Negation (-)</entry>
						<entry>The negative value of a factor. Example: f(x)=-x</entry>
					</row>
					<row>
						<entry>Logical NOT (not)</entry>
						<entry>Indicates if a term evaluates to 0.</entry>
					</row>
					<row>
						<entry>Multiplication (*)</entry>
		     			<entry>Multiplies the two factors. Example: f(x)=2*x</entry>
		     		</row>
			 		<row>
		     			<entry>Division (/)</entry>
		     			<entry>Divide the two factors. Example: f(x)=2/x</entry>
		     		</row>
		     		<row>
		     			<entry>Addition (+)</entry>
		     			<entry>Add the two terms. Example: f(x)=2+x</entry>
			 		</row>
		     		<row>
		     			<entry>Subtraction (-)</entry>
		     			<entry>Subtract two terms. Example f(x)=2-x</entry>
		      		</row>
		     		<row>
		     			<entry>Greater than (>)</entry>
		     			<entry>Indicates if an expression is greater than another expression.</entry>
		      		</row>
		     		<row>
		     			<entry>Greater or equal (>=)</entry>
		     			<entry>Indicates if an expression is greater or equal to another expression.</entry>
		      		</row>
		     		<row>
		     			<entry>Less than (&lt;)</entry>
		     			<entry>Indicates if an expression is less than another expression.</entry>
		      		</row>
		     		<row>
		     			<entry>Less or equal (&lt;=)</entry>
		     			<entry>Indicates if an expression is less or equal to another expression.</entry>
		      		</row>
		     		<row>
		     			<entry>Equal (=)</entry>
		     			<entry>Indicates if two expressions evaluates to the exact same value.</entry>
		      		</row>
		     		<row>
		     			<entry>Not equal (&lt;>)</entry>
		     			<entry>Indicates if two expressions does not evaluates to the exact same value.</entry>
		      		</row>
		     		<row>
		     			<entry>Logical AND (and)</entry>
		     			<entry>Indicates if two expressions both evaluates to a value different from 0.</entry>
		      		</row>
		     		<row>
		     			<entry>Logical OR (or)</entry>
		     			<entry>Indicates if at least one of two expressions evaluates to a value different from 0.</entry>
		      		</row>
		     		<row>
		     			<entry>Logical XOR (xor)</entry>
		     			<entry>Indicates if exactly one of two expressions evaluates to a value different from 0.</entry>
		      		</row>
		    			</tbody>
		  		</tgroup>
			</informaltable>
	</para>


	<para>
		<informaltable>
			<?dbhtml table-width="90%" ?>
			<tgroup cols="2">
				<colspec colnum="1" colname="col1" colwidth="0.25*"/>
				<colspec colnum="2" colname="col2" colwidth="0.75*"/>
				<thead>
					<row>
						<entry>Function</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry namest="col1" nameend="col2" align="center"><emphasis>Trigonometric</emphasis></entry>
					</row>
					<row>
						<entry><link linkend="sin">sin</link></entry>
						<entry>Returns the sine of the argument, which may be in radians or degrees.</entry>
					</row>
					<row>
						<entry><link linkend="cos">cos</link></entry>
						<entry>Returns the cosine of the argument, which may be in radians or degrees.</entry>
					</row>
					<row>
						<entry><link linkend="tan">tan</link></entry>
   					<entry>Returns the tangent of the argument, which may be in radians or degrees.</entry>
   				</row>
	 				<row>
   					<entry>asin</entry>
     				<entry>Returns the inverse sine of the argument. The returned value may be in radians or degrees.</entry>
   				</row>
   				<row>
   					<entry>acos</entry>
   					<entry>Returns the inverse cosine of the argument. The returned value may be in radians or degrees.</entry>
		 			</row>
   				<row>
   					<entry>atan</entry>
   					<entry>Returns the inverse tangent of the argument. The returned value may be in radians or degrees.</entry>
   				</row>
   				<row>
   					<entry>csc</entry>
   					<entry>Returns the cosecant of the argument, which may be in radians or degrees.</entry>
   				</row>
   				<row>
   					<entry>sec</entry>
   					<entry>Returns the secant of the argument, which may be in radians or degrees.</entry>
   				</row>
   				<row>
   					<entry>cot</entry>
   					<entry>Returns the cotangent of the argument, which may be in radians or degrees.</entry>
   				</row>
   				<row>
   					<entry>acsc</entry>
   					<entry>Returns the inverse cosecant of the argument. The returned value may be in radians or degrees</entry>
   				</row>
   				<row>
   					<entry>asec</entry>
   					<entry>Returns the inverse secant of the argument. The returned value may be in radians or degrees.</entry>
   				</row>
   				<row>
   					<entry>acot</entry>
   					<entry>Returns the inverse cotangent of the argument. The returned value may be in radians or degrees.</entry>
   				</row>
					<row>
						<entry namest="col1" nameend="col2" align="center"><emphasis>Trigonometric</emphasis></entry>
					</row>
					<row>
						<entry>sinh</entry>
						<entry>Returns the hyperbolic sine of the argument.</entry>
					</row>
					<row>
						<entry>cosh</entry>
						<entry>Returns the hyperbolic cosine of the argument.</entry>
					</row>
					<row>
						<entry>tanh</entry>
						<entry>Returns the hyperbolic tangent of the argument.</entry>
					</row>
					<row>
						<entry>asinh</entry>
						<entry>Returns the inverse hyperbolic sine of the argument.</entry>
					</row>
					<row>
						<entry>acosh</entry>
						<entry>Returns the inverse hyperbolic cosine of the argument.</entry>
					</row>
					<row>
						<entry>atanh</entry>
						<entry>Returns the inverse hyperbolic tangent of the argument.</entry>
					</row>
					<row>
						<entry>csch</entry>
						<entry>Returns the hyperbolic cosecant of the argument.</entry>
					</row>
					<row>
						<entry>sech</entry>
						<entry>Returns the hyperbolic secant of the argument.</entry>
					</row>
					<row>
						<entry>coth</entry>
						<entry>Returns the hyperbolic cotangent of the argument.</entry>
					</row>
					<row>
						<entry>acsch</entry>
						<entry>Returns the inverse hyperbolic cosecant of the argument.</entry>
					</row>
					<row>
						<entry>asech</entry>
						<entry>Returns the inverse hyperbolic secant of the argument.</entry>
					</row>
					<row>
						<entry>acoth</entry>
						<entry>Returns the inverse hyperbolic cotangent of the argument.</entry>
					</row>
					<row>
						<entry namest="col1" nameend="col2" align="center"><emphasis>Power and Logarithm</emphasis></entry>
					</row>
					<row>
						<entry>sqr</entry>
						<entry>Returns the square of the argument, i.e. the power of two.</entry>
					</row>
					<row>
						<entry>exp</entry>
						<entry>Returns e raised to the power of the argument.</entry>
					</row>
					<row>
						<entry>sqrt</entry>
						<entry>Returns the square root of the argument.</entry>
					</row>
					<row>
						<entry>root</entry>
						<entry>Returns the n'th root of the argument.</entry>
					</row>
					<row>
						<entry>ln</entry>
						<entry>Returns the logarithm with base e to the argument.</entry>
					</row>
					<row>
						<entry>log</entry>
						<entry>Returns the logarithm with base 10 to the argument.</entry>
					</row>
					<row>
						<entry>logb</entry>
						<entry>Returns the logarithm with base n to the argument.</entry>
					</row>
					<row>
						<entry namest="col1" nameend="col2" align="center"><emphasis>Complex</emphasis></entry>
					</row>
					<row>
						<entry>abs</entry>
						<entry>Returns the absolute value of the argument.</entry>
					</row>
					<row>
						<entry>arg</entry>
						<entry>Returns the angle of the argument in radians or degrees.</entry>
					</row>
					<row>
						<entry>conj</entry>
						<entry>Returns the conjugate of the argument.</entry>
					</row>
					<row>
						<entry>re</entry>
						<entry>Returns the real part of the argument.</entry>
					</row>
					<row>
						<entry>im</entry>
						<entry>Returns the imaginary part of the argument.</entry>
					</row>
					<row>
						<entry namest="col1" nameend="col2" align="center"><emphasis>Rounding</emphasis></entry>
					</row>
					<row>
						<entry>trunc</entry>
						<entry>Returns the integer part of the argument.</entry>
					</row>
					<row>
						<entry>fract</entry>
						<entry>Returns the fractional part of the argument.</entry>
					</row>
					<row>
						<entry>ceil</entry>
						<entry>Rounds the argument up to nearest integer.</entry>
					</row>
					<row>
						<entry>floor</entry>
						<entry>Rounds the argument down to the nearest integer.</entry>
					</row>
					<row>
						<entry>round</entry>
						<entry>Rounds the first argument to the number of decimals given by the second argument.</entry>
					</row>
					<row>
						<entry namest="col1" nameend="col2" align="center"><emphasis>Piecewise</emphasis></entry>
					</row>
					<row>
						<entry>sign</entry>
						<entry>Returns the sign of the argument: 1 if the argument is greater than 0, and -1 if the argument if less than 0.</entry>
					</row>
					<row>
						<entry>u</entry>
						<entry>Unit step: Returns 1 if the argument is greater than or equal 0, and 0 otherwise.</entry>
					</row>
					<row>
						<entry>min</entry>
						<entry>Returns the smallest of the arguments.</entry>
					</row>
					<row>
						<entry>max</entry>
						<entry>Returns the greatest of the arguments.</entry>
					</row>
					<row>
						<entry>range</entry>
						<entry>Returns the second argument if it is in the range of the first and third argument.</entry>
					</row>
					<row>
						<entry>if</entry>
						<entry>Returns the second argument if the first argument does not evaluate to 0; Else the third argument is returned.</entry>
					</row>
					<row>
						<entry>ifseq</entry>
						<entry>The same as a sequence of if functions.</entry>
					</row>
					<row>
						<entry namest="col1" nameend="col2" align="center"><emphasis>Special</emphasis></entry>
					</row>
					<row>
						<entry>integrate</entry>
						<entry>Returns the numeric integral of the first argument from the second argument to the third argument.</entry>
					</row>
					<row>
						<entry>sum</entry>
						<entry>Returns the sum of the first argument evaluated for each integer in the range from the second to third argument.</entry>
					</row>
					<row>
						<entry>product</entry>
						<entry>Returns the product of the first argument evaluated for each integer in the range from the second to third argument.</entry>
					</row>
					<row>
						<entry>fact</entry>
						<entry>Returns the factorial of the argument.</entry>
					</row>
					<row>
						<entry>gamma</entry>
						<entry>Returns the Euler gamma function of the argument.</entry>
					</row>
					<row>
						<entry>beta</entry>
						<entry>Returns the beta function evaluated for the arguments.</entry>
					</row>
					<row>
						<entry>W</entry>
						<entry>Returns the Lambert W-function evaluated for the argument.</entry>
					</row>
					<row>
						<entry>zeta</entry>
						<entry>Returns the Riemann Zeta function evaluated for the argument.</entry>
					</row>
					<row>
						<entry>mod</entry>
						<entry>Returns the remainder of the first argument divided by the second argument.</entry>
					</row>
					<row>
						<entry>dnorm</entry>
						<entry>The probability function of the normal distribution in a variate with mean and standard </entry>
					</row>
				</tbody>
 			</tgroup>
		</informaltable>
	</para>

	<simplesect>
		<title>Notice the following relations:</title>
		<para>
			<simplelist>
				<member>sin(x)^2= (sin(x))^2</member>
				<member>sin 2x = sin(2x)</member>
				<member>sin 2+x = sin(2)+x</member>
				<member>sin x^2	= sin(x^2)</member>
				<member>2(x+3)x	= 2*(x+3)*x</member>
				<member>-x^2 = -(x^2)</member>
				<member>2x = 2*x</member>
				<member>e^2x = e^(2*x)</member>
			</simplelist>
		</para>
	</simplesect>
</section>

